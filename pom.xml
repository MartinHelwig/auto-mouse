<!--
SPDX-FileCopyrightText: 2023 Martin Helwig

SPDX-License-Identifier: MIT
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.martinhelwig.utility.automouse</groupId>
	<artifactId>auto-mouse</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>auto-mouse</name>
	<description>The auto-mouse utility moves the mouse in a configurable intervall to stop locking the screen.</description>
	<url>https://github.com/MartinHelwig/auto-mouse</url>
	<inceptionYear>2023</inceptionYear>


	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://raw.githubusercontent.com/MartinHelwig/MartinHelwig.github.io/main/LICENSE</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:https://github.com/MartinHelwig/auto-mouse.git</connection>
		<developerConnection>scm:git:ssh@github.com:MartinHelwig/auto-mouse.git</developerConnection>
		<url>https://github.com/MartinHelwig/auto-mouse</url>
	</scm>

	<developers>
		<developer>
			<id>MartinHelwig</id>
			<name>Martin Helwig</name>
			<roles>
				<role>owner</role>
				<role>developer</role>
			</roles>
			<timezone>Europe/Berlin</timezone>
		</developer>
	</developers>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/MartinHelwig/auto-mouse/issues</url>
	</issueManagement>

	<ciManagement>
		<system>GitHub Actions</system>
		<url>https://github.com/MartinHelwig/auto-mouse/actions</url>
	</ciManagement>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/MartinHelwig/auto-mouse</url>
		</repository>
		<site>
			<id>github</id>
			<name>GitHub Pages</name>
			<url>scm:git:https://github.com/MartinHelwig/auto-mouse.git</url>
		</site>
	</distributionManagement>

	<properties>
		<!-- general properties -->
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.assembly.id>${project.version}</project.assembly.id>

		<project.properties.file>${project.basedir}/project.properties</project.properties.file>

		<!-- specific properties -->
		<maven.test.skip>false</maven.test.skip>
		<javadoc.skip>false</javadoc.skip>
		<source.skip>false</source.skip>
		<dependency-check.skip>true</dependency-check.skip>
		<nsis.skip>true</nsis.skip>
		<jre.skip>true</jre.skip>
		<gpg.skip>true</gpg.skip>


		<junit.testFailureIgnore>true</junit.testFailureIgnore>
		<junit.reportDirectory>${project.basedir}/target/reports/junit</junit.reportDirectory>

		<dependency-check-maven.failBuildOnAnyVulnerability>true</dependency-check-maven.failBuildOnAnyVulnerability>
		<dependency-check-maven.dataDirectory>${project.basedir}/target/build-environment/dependencyCheckDataDirectory</dependency-check-maven.dataDirectory>
		<dependency-check-maven.outputDirectory>${project.basedir}/target/reports/dependency-check</dependency-check-maven.outputDirectory>

		<!-- dependency versions -->
		<commons.logging.version>1.3.0</commons.logging.version>
		<log4j.version>2.23.0</log4j.version>
		<junit.version>5.10.2</junit.version>
		<junit.platform.version>1.9.2</junit.platform.version>
		<dependency-check-maven.version>8.4.0</dependency-check-maven.version>

		<!-- plugin versions -->
		<maven-surefire.version>3.1.2</maven-surefire.version>
		<maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
		<maven-dependency-plugin.version>3.6.0</maven-dependency-plugin.version>
		<maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<maven-site-plugin.version>4.0.0-M9</maven-site-plugin.version>
		<maven-project-info-reports-plugin.version>3.4.5</maven-project-info-reports-plugin.version>
		<maven-scm-publish-plugin.version>3.2.1</maven-scm-publish-plugin.version>
		<maven-checkstyle-plugin.version>3.3.0</maven-checkstyle-plugin.version>
		<maven-jxr-plugin.version>3.3.0</maven-jxr-plugin.version>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
		<maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
		<jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
		<buildnumber-maven-plugin.version>3.2.0</buildnumber-maven-plugin.version>
		<git-commit-id-maven-plugin.version>6.0.0</git-commit-id-maven-plugin.version>
		<nsis-maven-plugin.version>1.0.3</nsis-maven-plugin.version>
		<mvn-jlink-wrapper.version>1.2.1</mvn-jlink-wrapper.version>
		<properties-maven-plugin.version>1.2.0</properties-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons.logging.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>${properties-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${project.properties.file}</file>
							</files>
							<quiet>true</quiet>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven-site-plugin.version}</version>
				<configuration>
					<locales>default</locales>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/distribution.xml</descriptor>
					</descriptors>
					<finalName>${project.artifactId}</finalName>
					<appendAssemblyId>true</appendAssemblyId>
					<attach>false</attach>
				</configuration>
				<executions>
					<execution>
						<id>assemble-all</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>io.github.martinhelwig.utility.automouse.AutoMouse</mainClass>
							<addClasspath>false</addClasspath>
							<!-- <classpathPrefix>lib</classpathPrefix> -->
							<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Built-By>${user.name}</Built-By>
							<Build-Time>${maven.build.timestamp}</Build-Time>
							<Commit-Time>${git.commit.time}</Commit-Time>
							<Commit-Id>${git.commit.id.full}</Commit-Id>
							<Class-Path>lib/*</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<configuration>
					<skipSource>${source.skip}</skipSource>
					<archive>
						<manifest>
							<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Built-By>${user.name}</Built-By>
							<Build-Time>${maven.build.timestamp}</Build-Time>
							<Commit-Time>${git.commit.time}</Commit-Time>
							<Commit-Id>${git.commit.id.full}</Commit-Id>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<skip>${javadoc.skip}</skip>
					<show>public</show>
					<doclint>none</doclint>
					<failOnWarnings>true</failOnWarnings>
					<failOnError>true</failOnError>
					<quiet>true</quiet>
					<archive>
						<manifest>
							<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Built-By>${user.name}</Built-By>
							<Build-Time>${maven.build.timestamp}</Build-Time>
							<Commit-Time>${git.commit.time}</Commit-Time>
							<Commit-Id>${git.commit.id.full}</Commit-Id>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire.version}</version>
				<configuration>
					<skip>${maven.test.skip}</skip>
					<skipTests>${maven.test.skip}</skipTests>
					<testFailureIgnore>${surefire.testFailureIgnore}</testFailureIgnore>
					<!--<reportsDirectory>${junit.reportDirectory}</reportsDirectory> -->
					<failIfNoTests>false</failIfNoTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire.version}</version>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--<reportsDirectory>${junit.reportDirectory}</reportsDirectory> -->
					<!--<outputDirectory>${junit.reportDirectory}</outputDirectory> -->
					<!--<outputName>JUnit-Examples-Test-Report</outputName> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<skip>${jacoco.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>target/reports/jacoco</outputDirectory>
							<formats>HTML</formats>
							<formats>CSV</formats>
							<formats>XML</formats>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${dependency-check-maven.version}</version>
				<configuration>
					<skip>${dependency-check.skip}</skip>
					<cveValidForHours>12</cveValidForHours>
					<failBuildOnAnyVulnerability>${dependency-check-mavenfailBuildOnAnyVulnerability}</failBuildOnAnyVulnerability>
					<dataDirectory>${dependency-check-mavendataDirectory}</dataDirectory>
					<outputDirectory>${dependency-check-mavenoutputDirectory}</outputDirectory>
					<prettyPrint>true</prettyPrint>
					<formats>
						<format>ALL</format>
					</formats>
					<suppressionFiles>
						<suppressionFile>src/main/resources/suppressions.xml</suppressionFile>
					</suppressionFiles>
				</configuration>
				<executions>
					<execution>
						<id>attach-dependency-chech</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<configuration>
					<configLocation>sun_checks.xml</configLocation>
					<suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<failOnViolation>true</failOnViolation>
					<linkXRef>true</linkXRef>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
				</configuration>
				<executions>
					<execution>
						<id>check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.igormaznitsa</groupId>
				<artifactId>mvn-jlink-wrapper</artifactId>
				<version>${mvn-jlink-wrapper.version}</version>
				<executions>
					<execution>
						<id>cache-linux-jre</id>
						<phase>package</phase>
						<goals>
							<goal>cache-jdk</goal>
						</goals>
						<configuration>
							<skip>true</skip>
							<jdkPathProperty>linux.jre.path</jdkPathProperty>
							<jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>
							<provider>URL</provider>
							<providerConfig>
								<id>linux-jre</id>
								<url>https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jre_x64_linux_hotspot_17.0.8.1_1.tar.gz</url>
								<sha256>ab68857594792474a3049ede09ea1178e42df29803a6a41be771794f571b2d4e</sha256>
							</providerConfig>
						</configuration>
					</execution>
					<execution>
						<id>cache-windows-jre</id>
						<phase>package</phase>
						<goals>
							<goal>cache-jdk</goal>
						</goals>
						<configuration>
							<skip>${nsis.skip}</skip>
							<skip>${jre.skip}</skip>
							<jdkPathProperty>windows.jre.path</jdkPathProperty>
							<jdkCachePath>${project.build.directory}${file.separator}jdkCache</jdkCachePath>
							<provider>URL</provider>
							<providerConfig>
								<id>windows-jre</id>
								<url>https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.8.1%2B1/OpenJDK17U-jre_x64_windows_hotspot_17.0.8.1_1.zip</url>
								<sha256>a43a96a10c8bd531b7fadd2f3dcf5b839c81c79affcfba0141f1e8b4ffefe521</sha256>
							</providerConfig>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>extract-assembly</id>
						<phase>package</phase>
						<configuration>
							<skip>${nsis.skip}</skip>
							<target>
								<echo level="info" message="extract file ${project.artifactId}.tar.gz" />
								<untar compression="gzip" dest="target/" src="target/${project.artifactId}-${project.version}.tar.gz" />
								<mkdir dir="target/${project.artifactId}/jre" />
								<copy todir="target/${project.artifactId}/jre" failonerror="false" quiet="true">
									<fileset dir="${windows.jre.path}" includes="**" />
								</copy>
								<delete includeemptydirs="true">
									<fileset dir="target/${project.artifactId}/jre">
										<and>
											<size value="0" />
											<type type="dir" />
										</and>
									</fileset>
								</delete>

								<fail message="no jre found">
									<condition>
										<and>
											<not>
												<equals arg1="${jre.skip}" arg2="true" trim="true" casesensitive="false" />
											</not>
											<not>
												<resourceexists>
													<file file="target/${project.artifactId}/jre/bin/java.exe" />
												</resourceexists>
											</not>
										</and>
									</condition>
								</fail>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>define-deploy-repository</id>
						<phase>verify</phase>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<target>
								<echo level="info" message="define which deployment repository should be used" />
								<fail message="branch not found">
									<condition>
										<not>
											<isset property="git.branch"/>
										</not>
									</condition>
								</fail>
								
								<fail message="no SNAPSHOT version on release tag allowed">
									<condition>
										<and>
											<matches pattern="^v[0-9]+.[0-9]+.[0-9]+$" string="${git.branch}"/>
											<matches pattern=".*SNAPSHOT.*" string="${project.version}"/>
										</and>
									</condition>
								</fail>
								
								<condition property="local-repo" value="true">
									<and>
										<not>
											<matches pattern="^main$|^release/.*|^v[0-9]+.[0-9]+.[0-9]+$" string="${git.branch}"/>
										</not>
									</and>
								</condition>
								<condition property="local-repo" value="true">
									<and>
										<matches pattern="^main$|^release/.*" string="${git.branch}"/>
										<not>
											<matches pattern=".*SNAPSHOT.*" string="${project.version}"/>
										</not>
									</and>
								</condition>
								
								<condition property="altDeploymentRepository" value="repo::file:target/local-repo">
      								<isset property="local-repo"/>
    							</condition>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.digitalmediaserver</groupId>
				<artifactId>nsis-maven-plugin</artifactId>
				<version>${nsis-maven-plugin.version}</version>
				<configuration>
					<disabled>${nsis.skip}</disabled>
					<makensisExecutable>C:/Program Files (x86)/NSIS/Bin/makensis.exe</makensisExecutable>
					<makensisExecutableLinux>/usr/bin/makensis</makensisExecutableLinux>
					<compression>lzma</compression>
					<compressionIsFinal>true</compressionIsFinal>
					<compressionDictSize>64</compressionDictSize>
					<defines>
						<PRODUCT_MAJOR_VERSION>${project.artifact.selectedVersion.majorVersion}</PRODUCT_MAJOR_VERSION>
						<PRODUCT_MINOR_VERSION>${project.artifact.selectedVersion.minorVersion}</PRODUCT_MINOR_VERSION>
						<PRODUCT_PATCH_VERSION>${project.artifact.selectedVersion.incrementalVersion}</PRODUCT_PATCH_VERSION>
						<PRODUCT_BUILD_VERSION>${project.artifact.selectedVersion.buildNumber}</PRODUCT_BUILD_VERSION>
					</defines>
				</configuration>
				<executions>
					<execution>
						<id>build-windows-installer</id>
						<configuration>
							<scriptFile>${project.basedir}/src/nsis/installer.nsi</scriptFile>
							<outputFile>${project.artifactId}-${project.version}.exe</outputFile>
							<attachArtifact>false</attachArtifact>
						</configuration>
						<goals>
							<goal>generate-headerfile</goal>
							<goal>make</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-publish-plugin</artifactId>
				<version>${maven-scm-publish-plugin.version}</version>
				<configuration>
					<scmBranch>gh-pages</scmBranch>
					<username>x-access-token</username>
					<password>${env.GITHUB_TOKEN}</password>
				</configuration>
			</plugin>
			
			<plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>${git-commit-id-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <!--<includeOnlyProperties>
                        <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
                        <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
                    </includeOnlyProperties>-->
                    <commitIdGenerationMode>full</commitIdGenerationMode>
                </configuration>
            </plugin>
            
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven-gpg-plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${gpg.skip}</skip>
					<gpgArguments>
						<arg>--pinentry-mode</arg>
						<arg>loopback</arg>
					</gpgArguments>
					<keyname>${GPG_SIGNING_KEYNAME}</keyname>
					<passphrase>${GPG_SIGNING_PASSPHRASE}</passphrase>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
				<!--<reportSets> <reportSet> <reports> <report>index</report> </reports> 
					</reportSet> </reportSets> -->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<reportSets>
					<reportSet>
						<!-- aggregate reportSet, to define in poms having modules -->
						<id>aggregate</id>
						<inherited>false</inherited> <!-- don't run aggregate in child modules -->
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire.version}</version>
			</plugin>

			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${dependency-check-maven.version}</version>
				<configuration>
					<cveValidForHours>12</cveValidForHours>
					<dataDirectory>${dependency-check-mavendataDirectory}</dataDirectory>
					<prettyPrint>true</prettyPrint>
					<formats>
						<format>ALL</format>
					</formats>
					<suppressionFiles>
						<suppressionFile>src/main/resources/suppressions.xml</suppressionFile>
					</suppressionFiles>
				</configuration>
				<!--<reportSets> <reportSet> <reports> <report>aggregate</report> </reports> 
					</reportSet> </reportSets> -->
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>
</project>